// Code generated by MockGen. DO NOT EDIT.
// Source: channel.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	repository "github.com/girakdev/girack-backend/domain/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockChannelRepository is a mock of ChannelRepository interface.
type MockChannelRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChannelRepositoryMockRecorder
}

// MockChannelRepositoryMockRecorder is the mock recorder for MockChannelRepository.
type MockChannelRepositoryMockRecorder struct {
	mock *MockChannelRepository
}

// NewMockChannelRepository creates a new mock instance.
func NewMockChannelRepository(ctrl *gomock.Controller) *MockChannelRepository {
	mock := &MockChannelRepository{ctrl: ctrl}
	mock.recorder = &MockChannelRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelRepository) EXPECT() *MockChannelRepositoryMockRecorder {
	return m.recorder
}

// GetChannels mocks base method.
func (m *MockChannelRepository) GetChannels(ctx context.Context, input *repository.GetChannelsInput) (*repository.GetChannelsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChannels", ctx, input)
	ret0, _ := ret[0].(*repository.GetChannelsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChannels indicates an expected call of GetChannels.
func (mr *MockChannelRepositoryMockRecorder) GetChannels(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChannels", reflect.TypeOf((*MockChannelRepository)(nil).GetChannels), ctx, input)
}

// MockChannelsGetter is a mock of ChannelsGetter interface.
type MockChannelsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockChannelsGetterMockRecorder
}

// MockChannelsGetterMockRecorder is the mock recorder for MockChannelsGetter.
type MockChannelsGetterMockRecorder struct {
	mock *MockChannelsGetter
}

// NewMockChannelsGetter creates a new mock instance.
func NewMockChannelsGetter(ctrl *gomock.Controller) *MockChannelsGetter {
	mock := &MockChannelsGetter{ctrl: ctrl}
	mock.recorder = &MockChannelsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelsGetter) EXPECT() *MockChannelsGetterMockRecorder {
	return m.recorder
}

// GetChannels mocks base method.
func (m *MockChannelsGetter) GetChannels(ctx context.Context, input *repository.GetChannelsInput) (*repository.GetChannelsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChannels", ctx, input)
	ret0, _ := ret[0].(*repository.GetChannelsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChannels indicates an expected call of GetChannels.
func (mr *MockChannelsGetterMockRecorder) GetChannels(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChannels", reflect.TypeOf((*MockChannelsGetter)(nil).GetChannels), ctx, input)
}
